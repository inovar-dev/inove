{"version":3,"file":"index.js","sources":["../node_modules/regexparam/dist/index.mjs","../router/router.js","../tagu/index.js","../url/index.js"],"sourcesContent":["export function parse(str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n\nvar RGX = /*#__PURE__*/ /(\\/|^)([:*][^/]*?)(\\?)?(?=[/.]|$)/g;\n\n// error if key missing?\nexport function inject(route, values) {\n\treturn route.replace(RGX, (x, lead, key, optional) => {\n\t\tx = values[key=='*' ? 'wild' : key.substring(1)];\n\t\treturn x ? '/'+x : (optional || key=='*') ? '' : '/' + key;\n\t});\n}\n","import {parse} from 'regexparam';\n\nconst MAP = {\n\t\"\": 0,\n\tGET: 1,\n\tHEAD: 2,\n\tPATCH: 3,\n\tOPTIONS: 4,\n\tCONNECT: 5,\n\tDELETE: 6,\n\tTRACE: 7,\n\tPOST: 8,\n\tPUT: 9,\n};\n\nexport default class Router {\n\tconstructor() {\n\t\tthis.routes = [];\n\n\t\tthis.all = this.add.bind(this, '');\n\t\tthis.get = this.add.bind(this, 'GET');\n\t\tthis.head = this.add.bind(this, 'HEAD');\n\t\tthis.patch = this.add.bind(this, 'PATCH');\n\t\tthis.options = this.add.bind(this, 'OPTIONS');\n\t\tthis.connect = this.add.bind(this, 'CONNECT');\n\t\tthis.delete = this.add.bind(this, 'DELETE');\n\t\tthis.trace = this.add.bind(this, 'TRACE');\n\t\tthis.post = this.add.bind(this, 'POST');\n\t\tthis.put = this.add.bind(this, 'PUT');\n\t}\n\n\tuse(route, ...fns) {\n\t\tlet handlers = [].concat.apply([], fns);\n\t\tlet { keys, pattern } = parse(route, true);\n\t\tthis.routes.push({ keys, pattern, method: '', handlers, midx: MAP[''] });\n\t\treturn this;\n\t}\n\n\tadd(method, route, ...fns) {\n\t\tlet { keys, pattern } = parse(route);\n\t\tlet handlers = [].concat.apply([], fns);\n\t\tthis.routes.push({ keys, pattern, method, handlers, midx: MAP[method] });\n\t\treturn this;\n\t}\n\n\tfind(method, url) {\n\t\tlet midx = MAP[method];\n\t\tlet isHEAD = (midx === 2);\n\t\tlet i=0, j=0, k, tmp, arr=this.routes;\n\t\tlet matches=[], params={}, handlers=[];\n\t\tfor (; i < arr.length; i++) {\n\t\t\ttmp = arr[i];\n\t\t\tif (tmp.midx === midx  || tmp.midx === 0 || (isHEAD && tmp.midx===1) ) {\n\t\t\t\tif (tmp.keys === false) {\n\t\t\t\t\tmatches = tmp.pattern.exec(url);\n\t\t\t\t\tif (matches === null) continue;\n\t\t\t\t\tif (matches.groups !== void 0) for (k in matches.groups) params[k]=matches.groups[k];\n\t\t\t\t\ttmp.handlers.length > 1 ? (handlers=handlers.concat(tmp.handlers)) : handlers.push(tmp.handlers[0]);\n\t\t\t\t} else if (tmp.keys.length > 0) {\n\t\t\t\t\tmatches = tmp.pattern.exec(url);\n\t\t\t\t\tif (matches === null) continue;\n\t\t\t\t\tfor (j=0; j < tmp.keys.length;) params[tmp.keys[j]]=matches[++j];\n\t\t\t\t\ttmp.handlers.length > 1 ? (handlers=handlers.concat(tmp.handlers)) : handlers.push(tmp.handlers[0]);\n\t\t\t\t} else if (tmp.pattern.test(url)) {\n\t\t\t\t\ttmp.handlers.length > 1 ? (handlers=handlers.concat(tmp.handlers)) : handlers.push(tmp.handlers[0]);\n\t\t\t\t}\n\t\t\t} \n\t\t}\n\n\t\treturn { params, handlers };\n\t}\n}","import http from 'node:http';\nimport { parse } from 'node:querystring';\nimport Router  from '../router/router.js';\nimport parseUrl from '../url/index.js';\n\n\n\nfunction lead(x) {\n\treturn x.charCodeAt(0) === 47 ? x : ('/' + x);\n}\n\nfunction value(x) {\n  let y = x.indexOf('/', 1);\n  return y > 1 ? x.substring(0, y) : x;\n}\n\nfunction mutate(str, req) {\n\treq.url = req.url.substring(str.length) || '/';\n\treq.path = req.path.substring(str.length) || '/';\n}\n\nfunction onError(err, req, res, next) {\n\tlet code = (res.statusCode = err.code || err.status || 500);\n\tif (typeof err === 'string' || Buffer.isBuffer(err)) res.end(err);\n\telse res.end(err.message || http.STATUS_CODES[code]);\n}\n\nclass Inovet extends Router {\n\tconstructor(opts={}) {\n\t\tsuper(opts);\n\t\tthis.apps = {};\n\t\tthis.wares = [];\n\t\tthis.bwares = {};\n\t\tthis.parse = parseUrl();\n\t\tthis.server = opts.server;\n\t\tthis.handler = this.handler.bind(this);\n\t\tthis.onError = opts.onError || onError; // catch-all handler\n\t\tthis.onNoMatch = opts.onNoMatch || this.onError.bind(null, { code:404 });\n\t}\n\n\tadd(method, pattern, ...fns) {\n\t\tlet base = lead(value(pattern));\n\t\tif (this.apps[base] !== void 0) throw new Error(`Cannot mount \".${method.toLowerCase()}('${lead(pattern)}')\" an application at \".use('${base}')\"`);\n\t\treturn super.add(method, pattern, ...fns);\n\t}\n\n\tuse(base, ...fns) {\n\t\tif (typeof base === 'function') {\n\t\t\tthis.wares = this.wares.concat(base, fns);\n\t\t} else if (base === '/') {\n\t\t\tthis.wares = this.wares.concat(fns);\n\t\t} else {\n\t\t\tbase = lead(base);\n\t\t\tfns.forEach(fn => {\n\t\t\t\tif (fn instanceof Inovet) {\n\t\t\t\t\tthis.apps[base] = fn;\n\t\t\t\t} else {\n\t\t\t\t\tlet arr = this.bwares[base] || [];\n\t\t\t\t\tarr.length > 0 || arr.push((r, _, nxt) => (mutate(base, r),nxt()));\n\t\t\t\t\tthis.bwares[base] = arr.concat(fn);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this; // chainable\n\t}\n\n\tlisten() {\n\t\t(this.server = this.server || http.createServer()).on('request', this.handler);\n\t\tthis.server.listen.apply(this.server, arguments);\n\t\treturn this;\n\t}\n\n\thandler(req, res, info) {\n\t\tinfo = info || this.parse(req);\n\t\tlet fns=[], arr=this.wares, obj=this.find(req.method, info.pathname);\n\t\treq.originalUrl = req.originalUrl || req.url;\n\t\tlet base = value(req.path = info.pathname);\n\t\tif (this.bwares[base] !== void 0) {\n\t\t\tarr = arr.concat(this.bwares[base]);\n\t\t}\n\t\tif (obj) {\n\t\t\tfns = obj.handlers;\n\t\t\treq.params = obj.params;\n\t\t} else if (this.apps[base] !== void 0) {\n\t\t\tmutate(base, req); info.pathname=req.path; \n\t\t\tfns.push(this.apps[base].handler.bind(null, req, res, info));\n\t\t}\n\t\tfns.push(this.onNoMatch);\n\t\treq.search = info.search;\n\t\treq.query = parse(info.query);\n\t\tlet i=0, len=arr.length, num=fns.length;\n\t\tif (len === i && num === 1) return fns[0](req, res);\n\t\tlet next = err => err ? this.onError(err, req, res, next) : loop();\n\t\tlet loop = _ => res.finished || (i < len) && arr[i++](req, res, next);\n\t\tarr = arr.concat(fns);\n\t\tlen += num;\n\t\tloop(); \n\t}\n}\n\nconst inovet = opts => new Inovet(opts);\n\nexport default inovet","/**\n * Parses the URL from the given request object.\n *\n * @param {Object} req - The request object.\n * @return {Object} The parsed URL object.\n */\nexport default function parseUrl(req) {\n\tvar url = req.url;\n\tif (url === void 0) return url;\n\tvar obj = req._parsedUrl;\n\tif (obj && obj._raw === url) return obj;\n\tobj = {};\n\tobj.query = obj.search = null;\n\tobj.href = obj.path = obj.pathname = url;\n\tvar idx = url.indexOf('?', 1);\n\tif (idx !== -1) {\n\t  obj.search = url.substring(idx);\n\t  obj.query = obj.search.substring(1);\n\t  obj.pathname = url.substring(0, idx);\n\t}\n\tobj._raw = url;\n\treturn req._parsedUrl = obj;\n  }"],"names":["parse","str","loose","RegExp","keys","pattern","c","o","tmp","ext","arr","split","shift","push","indexOf","substring","length","MAP","GET","HEAD","PATCH","OPTIONS","CONNECT","DELETE","TRACE","POST","PUT","Router","constructor","this","routes","all","add","bind","get","head","patch","options","connect","delete","trace","post","put","use","route","fns","handlers","concat","apply","method","midx","find","url","k","isHEAD","i","j","matches","params","exec","groups","test","lead","x","charCodeAt","value","y","mutate","req","path","onError","err","res","next","code","statusCode","status","Buffer","isBuffer","end","message","http","STATUS_CODES","Inovet","opts","super","apps","wares","bwares","obj","_parsedUrl","_raw","query","search","href","pathname","idx","parseUrl","server","handler","onNoMatch","base","Error","toLowerCase","forEach","fn","r","_","nxt","listen","createServer","on","arguments","info","originalUrl","len","num","loop","finished","inovet"],"mappings":"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","x_google_ignoreList":[0]}